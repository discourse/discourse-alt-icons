"use strict";

const fs = require("fs");
const feather = require("feather-icons");

const sets = require("./icon-sets.json");

let icons = [],
  replacers = [];

for (var id in sets) {
  icons = [];
  replacers = [];
  const set = sets[id];
  writeSprite(id, set);
  writeInitializer(set);
  writeAbout(set);
  console.log(`${set.name} updated!`);
}

function writeSprite(id, set) {
  try {
    const setMappings = JSON.parse(fs.readFileSync(set.mappings));

    for (const discourseIconId in setMappings) {
      const iconId = setMappings[discourseIconId];
      const prefix = `${set.prefix}-`;
      let svg = "";

      if (iconId !== "TODO") {
        svg = `
    <symbol id="${prefix}${iconId}">
      ${_getSvg(id, iconId, set)}
    </symbol>`;
      } else {
        console.log(`${discourseIconId} is marked as TODO.`);
      }

      if (!icons.includes(svg)) {
        icons.push(svg);
      }
      if (iconId !== "TODO") {
        replacers.push(
          `api.replaceIcon("${discourseIconId}", "${prefix}${iconId}");`
        );
      }
    }

    const sprite = `<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  ${icons.join("\n")}
</svg>
`;

    fs.writeFile(
      `repos/discourse-${set.name}/assets/icons-sprite.svg`,
      sprite,
      (err) => {
        if (err) {
          console.error(err);
        }
      }
    );
  } catch (err) {
    console.log(err);
  }
}

function writeInitializer(set) {
  const jsContent = `// autogenerated via "yarn run build.js"
import { withPluginApi } from "discourse/lib/plugin-api";

function initIcons(api) {
  ${replacers.join("\n  ")}
}

export default {
  name: "${set.name}",
  initialize() {
    withPluginApi("0.10.1", initIcons);
  },
};

`;

  fs.writeFile(
    `repos/discourse-${set.name}/javascripts/discourse/initializers/${set.name}.js.es6`,
    jsContent,
    (err) => {
      if (err) {
        console.error(err);
        return;
      }
    }
  );
}

function writeAbout(set) {
  const aboutContent = `{
  "name": "discourse-${set.name}",
  "description": "${set.description}",
  "about_url": null,
  "license_url": null,
  "component": true,
  "assets": {
    "icons-sprite": "/assets/icons-sprite.svg"
  }
}
`;

  fs.writeFile(
    `repos/discourse-${set.name}/about.json`,
    aboutContent,
    (err) => {
      if (err) {
        console.error(err);
        return;
      }
    }
  );
}

function _getSvg(setId, iconId, setMetadata) {
  let svg = "";

  switch (setId) {
    case "feather":
      svg = feather.icons[iconId].toSvg();
      svg = svg.replace('width="24" ', "");
      svg = svg.replace('height="24" ', "");
      break;

    default:
      try {
        svg = fs.readFileSync(`${setMetadata.icons}/${iconId}.svg`, "utf8");
      } catch (err) {
        console.error(err);
      }
      break;
  }

  return svg;
}
